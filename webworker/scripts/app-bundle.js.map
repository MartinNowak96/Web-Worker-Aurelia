{"version":3,"sources":["C:/Users/MNowak/Desktop/aurelia git clone test/Test-Aurelia-Repo/webworker/src/worker.js","src/webworker.js","src/resources/index.js","src/main.js","src/environment.js","src/app.js"],"names":["webworker","webEmployee","Worker","messageToThread","doMath","num1","num2","postMessage","configure","config","aurelia","use","standardConfiguration","feature","environment","debug","developmentLogging","testing","plugin","start","then","setRoot","App","configureRouter","router","map","route","name","moduleId","title","message"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;;;YCFaA,oBAAAA,YACT,qBAAa;AAAA;;AACT,oBAAIC,cAAc,IAAIC,MAAJ,CAAW,WAAX,CAAlB;;AAEA,oBAAIC,kBAAkB,EAAEC,QAAQ,EAACC,MAAK,CAAN,EAASC,MAAK,CAAd,EAAV,EAAtB;;AAIAL,4BAAYM,WAAZ,CAAwBJ,eAAxB;AAMH;;;;;;;;;UCdWK,YAAAA;AAAT,WAASA,SAAT,CAAmBC,MAAnB,EAA2B,CAEjC;;;;;;;;UCAeD,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBE,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAIC,sBAAYC,KAAhB,EAAuB;AACrBL,cAAQC,GAAR,CAAYK,kBAAZ;AACD;;AAED,QAAIF,sBAAYG,OAAhB,EAAyB;AACvBP,cAAQC,GAAR,CAAYO,MAAZ,CAAmB,iBAAnB;AACD;;AAEDR,YAAQS,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMV,QAAQW,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;oBChBc;AACbN,WAAO,IADM;AAEbE,aAAS;AAFI;;;;;;;;;;;;;;;MCAFK,cAAAA;kBACXC,2CAAgBd,QAAQe,QAAO;AAC7B,WAAKA,MAAL,GAAaA,MAAb;AACAf,aAAOgB,GAAP,CAAW,CAAC,EAACC,OAAO,CAAC,EAAD,EAAI,WAAJ,CAAR,EAA0BC,MAAK,WAA/B,EAA4CC,UAAS,WAArD,EAAkEC,OAAM,WAAxE,EAAD,CAAX;AACD;;AACD,mBAAc;AAAA;;AACZ,WAAKC,OAAL,GAAe,cAAf;AACD","file":"app-bundle.js","sourcesContent":[null,"export class webworker{\r\n    constructor(){\r\n        var webEmployee = new Worker(\"worker.js\")//register worker\r\n\r\n        let messageToThread = { doMath: {num1:1, num2:3}};//command to send to worker has to be in object format\r\n        //will know what function to do by e.data.functionName != undefined\r\n        //will get data by e.data.num1 and e.data.num1\r\n\r\n        webEmployee.postMessage(messageToThread);//send the message to the thread\r\n        //comment\r\n\r\n\r\n\r\n\r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","export class App {\r\n  configureRouter(config, router){\r\n    this.router= router;\r\n    config.map([{route: ['',\"webworker\"], name:\"webworker\", moduleId:\"webworker\", title:\"WebWorker\"}]);\r\n  }\r\n  constructor() {\r\n    this.message = 'Hello World!';\r\n  }\r\n}\r\n"],"sourceRoot":".."}